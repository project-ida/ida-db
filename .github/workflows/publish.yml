name: Publish to PyPI on main push

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Required for PyPI Trusted Publishing
      contents: write # Needed to push version updates & create releases

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Ensures push access

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Auto-increment version
        run: |
          VERSION=$(date +'%Y.%m.%d.%H%M')  # Example: 2025.02.05.1430
          echo "Updating version to $VERSION"

          sed -i "s/\(version=['\"]\)[^'\"]*\(['\"]\)/\1$VERSION\2/" setup.py

          echo "New version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Store in GitHub Actions environment

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add setup.py
          git commit -m "Bump version to ${{ env.VERSION }}"
          git push origin main
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ env.VERSION }} --title "Release v${{ env.VERSION }}" --notes "Auto-generated release for v${{ env.VERSION }}"

      - name: Build the package
        run: python -m build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
